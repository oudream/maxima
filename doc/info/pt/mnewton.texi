@c /mnewton.texi/1.2/Mon May 15 07:54:51 2006//
@menu
* Definições para mnewton::
@end menu

@node Definições para mnewton,  , mnewton, mnewton
@section Definições para mnewton

@defvr {Variável de opção} newtonepsilon
Valor por omissão: @code{10.0^(-fpprec/2)}

Precisão para determinar quando a função @code{mnewton} convergiu em direção à solução.

Veja também @code{mnewton}.
@end defvr


@defvr {Variável de opção} newtonmaxiter
Valor por omissão: @code{50}

Número máximo de iterações que para a função @code{mnewton}
caso essa função não seja convergente ou se convergir muito lentamente.

Veja também @code{mnewton}.
@end defvr

@deffn {Função} mnewton (@var{FuncList},@var{VarList},@var{GuessList})
Solução de multiplas funções não lineares usando o método de Newton.
@var{FuncList} é a lista de funções a serem resolvidas,
@var{VarList} é a lista dos nomes de variáveis, e
@var{GuessList} é a lista de aproximações iniciais.

A solução é retornada no mesmo formato retornado pela função @code{solve()}.
Caso a solução não seja encontrada, @code{[]} é retornado.

Essa função é controlada através das variáveis globais @code{newtonepsilon} e @code{newtonmaxiter}.

@example
(%i1) load("mnewton")$

(%i2) mnewton([x1+3*log(x1)-x2^2, 2*x1^2-x1*x2-5*x1+1],
              [x1, x2], [5, 5]);
(%o2) [[x1 = 3.756834008012769, x2 = 2.779849592817897]]
(%i3) mnewton([2*a^a-5],[a],[1]);
(%o3)             [[a = 1.70927556786144]]
(%i4) mnewton([2*3^u-v/u-5, u+2^v-4], [u, v], [2, 2]);
(%o4) [[u = 1.066618389595407, v = 1.552564766841786]]
@end example

Para usar essa função primeiro escreva @code{load("mnewton")}. Veja também @code{newtonepsilon} e @code{newtonmaxiter}.
@end deffn


